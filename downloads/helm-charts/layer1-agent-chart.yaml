apiVersion: v2
name: layer1-agent
description: Cisco AI Layer 1 Agent for network monitoring and troubleshooting
type: application
version: 1.0.0
appVersion: "1.0.0"
keywords:
  - cisco
  - ai
  - monitoring
  - layer1
  - network
maintainers:
  - name: Cisco AI Team
    email: ai-support@cisco.com
home: https://ciscoaidemo.com
sources:
  - https://github.com/cisco/ai-agents
icon: https://ciscoaidemo.com/ciscologo.jpg

---
# values.yaml
replicaCount: 1

image:
  repository: cisco-ai-agents/layer1-agent
  pullPolicy: IfNotPresent
  tag: "1.0.0"

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: layer1-agent.local
      paths:
        - path: /
          pathType: ImplementationSpecific

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

config:
  logLevel: info
  apiKey: ""  # Set your API key here
  endpoint: "https://api.ciscoai.com"
  monitoring:
    enabled: true
    interval: 30s
    timeout: 10s
  
  # Layer 1 specific settings
  optics:
    domPolling: true
    berThreshold: 1e-6
    powerThreshold: -30
  
  interfaces:
    - name: "Ethernet1/1"
      enabled: true
    - name: "Ethernet1/2"
      enabled: true

secrets:
  apiToken: ""
  snmpCommunity: "public"

nodeSelector: {}
tolerations: []
affinity: {}

---
# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "layer1-agent.fullname" . }}
  labels:
    {{- include "layer1-agent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "layer1-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "layer1-agent.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        env:
        - name: LOG_LEVEL
          value: {{ .Values.config.logLevel }}
        - name: API_ENDPOINT
          value: {{ .Values.config.endpoint }}
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "layer1-agent.fullname" . }}-secret
              key: api-key
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.resources | nindent 12 }}

---
# service.yaml
apiVersion: v1
kind: Service
metadata:
  name: {{ include "layer1-agent.fullname" . }}
  labels:
    {{- include "layer1-agent.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.targetPort }}
      protocol: TCP
      name: http
  selector:
    {{- include "layer1-agent.selectorLabels" . | nindent 4 }}